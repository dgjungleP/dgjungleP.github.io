<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>In Jungle</title>
  <icon>https://dgjunglep.github.io/icon.png</icon>
  <subtitle>没有什么是生来就有的</subtitle>
  <link href="https://dgjunglep.github.io/atom.xml" rel="self"/>
  
  <link href="https://dgjunglep.github.io/"/>
  <updated>2023-04-03T13:14:53.448Z</updated>
  <id>https://dgjunglep.github.io/</id>
  
  <author>
    <name>Jungle Deng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Day05 再看RxJava:创建Flowable（二）</title>
    <link href="https://dgjunglep.github.io/2023/04/03/100dayscode-5/"/>
    <id>https://dgjunglep.github.io/2023/04/03/100dayscode-5/</id>
    <published>2023-04-03T21:03:08.000Z</published>
    <updated>2023-04-03T13:14:53.448Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;上次我们制作了简单的`心跳包`，那除了`心跳`以外我们还能做些什么呢。在对创建方法的探索中，我们又发现了一个带有类似`interval`方法签名的一个方法
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;timer&quot;&gt;&lt;a href=&quot;#timer&quot;</summary>
        
      
    
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/categories/%E6%8C%91%E6%88%98/"/>
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/tags/%E6%8C%91%E6%88%98/"/>
    
    <category term="rxjava" scheme="https://dgjunglep.github.io/tags/rxjava/"/>
    
  </entry>
  
  <entry>
    <title>Day04 再看RxJava:创建Flowable（一）</title>
    <link href="https://dgjunglep.github.io/2023/04/02/100dayscode-4/"/>
    <id>https://dgjunglep.github.io/2023/04/02/100dayscode-4/</id>
    <published>2023-04-02T21:01:05.000Z</published>
    <updated>2023-04-03T13:14:53.448Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;在探索能够用已学习的知识能够用来做些什么东西的时候，本来想着来制作一个`心跳器`的，却发现还没有很好的办法去创建一个`心跳`，本着对于心跳的理解，所以心跳信号应该是用`Flowable`这种消息发布体来进行，提供所以，又得去探索一下关于`Flowable`的</summary>
        
      
    
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/categories/%E6%8C%91%E6%88%98/"/>
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/tags/%E6%8C%91%E6%88%98/"/>
    
    <category term="rxjava" scheme="https://dgjunglep.github.io/tags/rxjava/"/>
    
  </entry>
  
  <entry>
    <title>100dayscode-3 再看RxJava:Scheduler</title>
    <link href="https://dgjunglep.github.io/2023/04/01/100dayscode-3/"/>
    <id>https://dgjunglep.github.io/2023/04/01/100dayscode-3/</id>
    <published>2023-04-01T21:27:52.000Z</published>
    <updated>2023-04-03T13:14:53.448Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;经过昨天的学习，我们认识到了可以如何去消费我们&lt;code&gt;Flowable&lt;/code&gt;创建出来的消息，那么现在存在一个疑问，那么它是在那个线程去执行的呢。我们用一个新的方式&lt;code&gt;range&lt;/code&gt;去创建一个例子尝试一下&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/categories/%E6%8C%91%E6%88%98/"/>
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/tags/%E6%8C%91%E6%88%98/"/>
    
    <category term="rxjava" scheme="https://dgjunglep.github.io/tags/rxjava/"/>
    
  </entry>
  
  <entry>
    <title>100DaysCode-Day02 再看RxJava:Subscribe</title>
    <link href="https://dgjunglep.github.io/2023/03/31/100dayscode-2/"/>
    <id>https://dgjunglep.github.io/2023/03/31/100dayscode-2/</id>
    <published>2023-03-31T22:17:04.000Z</published>
    <updated>2023-04-03T13:14:53.448Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在昨天的使用我们，我们是用了最简单的 RxJava 的模型，在这里我们回顾一下我们是如何订阅了消息&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/categories/%E6%8C%91%E6%88%98/"/>
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/tags/%E6%8C%91%E6%88%98/"/>
    
    <category term="rxjava" scheme="https://dgjunglep.github.io/tags/rxjava/"/>
    
    <category term="小知识" scheme="https://dgjunglep.github.io/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>100DaysCode-Day01 再看RxJava:Hello Flowable</title>
    <link href="https://dgjunglep.github.io/2023/03/30/100dayscode-1/"/>
    <id>https://dgjunglep.github.io/2023/03/30/100dayscode-1/</id>
    <published>2023-03-30T11:21:11.000Z</published>
    <updated>2023-04-03T13:14:53.448Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在我的工作中，我使用最多的场景就是用 RxJava 帮助我处理异步任务的问题，所以对于 RxJava 的起步我应该是从&lt;code&gt;Flowable&lt;/code&gt;开始切入的。那么这里就浅讲一下&lt;code&gt;Flowable&lt;/code&gt;的使用方式（总的来说 RxJava</summary>
        
      
    
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/categories/%E6%8C%91%E6%88%98/"/>
    
    
    <category term="挑战" scheme="https://dgjunglep.github.io/tags/%E6%8C%91%E6%88%98/"/>
    
    <category term="rxjava" scheme="https://dgjunglep.github.io/tags/rxjava/"/>
    
  </entry>
  
  <entry>
    <title>开始</title>
    <link href="https://dgjunglep.github.io/2023/03/28/test-layout/"/>
    <id>https://dgjunglep.github.io/2023/03/28/test-layout/</id>
    <published>2023-03-28T21:44:18.000Z</published>
    <updated>2023-04-03T13:14:53.448Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;现在</summary>
        
      
    
    
    
    <category term="生活" scheme="https://dgjunglep.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活随记" scheme="https://dgjunglep.github.io/tags/%E7%94%9F%E6%B4%BB%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
</feed>
